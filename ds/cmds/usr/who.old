// who.c
#include <ansi.h>
#include <net/dns.h>

inherit F_CLEAN_UP;
string show_level(object user);
void create() { seteuid(getuid()); }

mixed main(object me, string arg, int remote)
{
	string str, *option;
	object *list;
	int i, j, ppl_cnt,idle;
	int opt_long, opt_id, opt_wiz;

	if( arg ) {
		option = explode(arg, " ");
		i = sizeof(option);
		while( i-- )
			switch(option[i]) {
				case "-l": opt_long = 1;	break;
				case "-i": opt_id = 1;		break;
				case "-w": opt_wiz = 1;		break;
				default:
					if( wizardp(me)
					&&	option[i][0]=='@' ) {
						RWHO_Q->send_rwho_q(option[i][1..sizeof(option[i])],
							me, opt_long);
						write("網路訊息已送出﹐請稍候。\n");
						return 1;
					}
					return notify_fail("指令格式﹕who [-l|-i|-w]\n");
			}
	}

	str = "◎ " + MUD_NAME + "\n";
	str += "─────────────────────────────────────\n";
	list = users();
	list = sort_array(users(), "sort_user", this_object());
	if( opt_long || opt_wiz ) {
		ppl_cnt = 0;
		j = sizeof(list);
		while( j-- )
		{
			// Skip those users in login limbo.
			if( !environment(list[j]) ) continue;
			if( !me->visible(list[j]) ) continue;
			if( opt_wiz && !wizardp(list[j]) ) continue;
			str = sprintf("%s%12s%-16s %s(%s)",
				str,
				RANK_D->query_rank(list[j]),
				RANK_D->query_level(list[j]),
				//list[j]->short(1),
				//list[j]->query("title"),
				list[j]->name(),
				list[j]->query("id"),
//				list[j]->query("nickname")==0? " ":" 「"+list[j]->query("nickname")+"」"
			);
			if(list[j]->query_temp("killer")) str+=HIR" [殺人犯]"NOR;
			idle=query_idle(list[j]);
			if(list[j]->query_temp("invis")) str+=HIB"(隱形)"NOR;
			if(idle>60) str +=sprintf(HIY" (發呆%d分鐘)"NOR,idle/60);
			str +=sprintf("\n"NOR);
			ppl_cnt++;
		}
	} else {
		ppl_cnt = 0;
		j = sizeof(list);
		while( j-- ) {
			// Skip those users in login limbo.
			if( !environment(list[j]) ) continue;
			if( me && !me->visible(list[j]) ) continue;
			str = sprintf("%s%-15s%s",
				str,
				opt_id ? capitalize(list[j]->query("id")): list[j]->name(1),
				(ppl_cnt%5==4? "\n": "")
			);
			ppl_cnt++;
		}
		if( ppl_cnt%5 ) str += "\n";
	}
		
	str += "─────────────────────────────────────\n";
	str = sprintf("%s共有 %d 位使用者連線中﹐系統負擔﹕%s\n", str, ppl_cnt,
		query_load_average() + "\n");

	if( remote ) return str;

	me->start_more(str);
	return 1;
}

int sort_user(object ob1, object ob2)
{
	if( wizardp(ob1) && !wizardp(ob2) ) return 1;
	
	if( wizardp(ob2) && !wizardp(ob1) ) return -1;

	if( wizardp(ob1) && wizardp(ob2) )
		return  (int)SECURITY_D->get_wiz_level(ob1)
			- (int)SECURITY_D->get_wiz_level(ob2);
	
	return  (int)ob1->query("level") - (int)ob2->query("level");
}

string show_level(object user)
{
 int level;
 level=user->query("level");
 if(level>100)
 	return "【????????】";
 if(level<11)
 	return "【第 "+chinese_number(level)+" 級】";
 if(level%10==0)
 	return "【第"+chinese_number(level)+"級】";
  return "【"+chinese_number(level)+"級】";
}

int help(object me)
{
write(@HELP
指令格式 : who [-l|-i|-w]

這個指令可以列出所有在線上的玩家及其等級。

-l 選項列出較長的訊息。
-i 只列出玩家的英文代號。
-w 只列出線上所有的巫師。

相關指令﹕ finger
HELP
    );
    return 1;
}
