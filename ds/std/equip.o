// equip.c

inherit ITEM;
inherit F_EQUIP;
inherit F_MATERIAL;

void setup()
{
	int volume,value,durable,damage,armor;
	::setup();
	
	if(!this_object()->query("material"))
		this_object()->set("material","plant");
// debug info
//	write(this_object()->query("material")+"\t"+weight()+"\n");
	volume = Eq_Volume(this_object()->query("material"),weight());
	value = Eq_Prize(this_object()->query("material"),weight());
	value += this_object()->query("add_value");	// 讓巫師能調整價格
	durable = Eq_Durable(this_object()->query("material"),volume);
// debug info
//	write("weight: "+weight()+" volume: "+volume+" value: "+value+" durable: "+durable+"\n");
	this_object()->set("volume",volume);
	this_object()->set("value",value);
	this_object()->set_temp("durable",durable);
	
	if(query("armor_type"))
	{
		if( !query("armor_prop/dodge") && (weight() >= 5000))
		set("armor_prop/dodge", - weight() / 5000 );
		armor=query("armor_prop/armor");
	}
	else if(query("zerg_armor_type"))
	{
		if( !query("zerg_armor_prop/dodge") && (weight() >= 5000))
		set("zerg_armor_prop/dodge", - weight() / 5000 );
		armor=query("zerg_armor_prop/armor");
	}
	else if(query("protoss_armor_type"))
	{
		if( !query("protoss_armor_prop/dodge") && (weight() >= 5000))
		set("protoss_armor_prop/dodge", - weight() / 5000 );
		armor=query("protoss_armor_prop/armor");
	}
	else if(query("beast_armor_type"))
	{
		if( !query("beast_armor_prop/dodge") && (weight() >= 5000))
		set("beast_armor_prop/dodge", - weight() / 5000 );
		armor=query("beast_armor_prop/armor");
	}
	else if(query("beast_weapon_prop"))
	{
		if( !query("beast_weapon_prop/dodge") && (weight() >= 5000))
			set("beast_weapon_prop/dodge", - weight() / 5000 );
		if( !query("beast_weapon_prop/parry") && (weight() >= 3000))
			set("beast_weapon_prop/parry",  weight() / 5000 );
		damage=query("beast_weapon_prop/damage");
	}
	else if(query("zerg_weapon_prop"))
	{
		if( !query("zerg_weapon_prop/dodge") && (weight() >= 5000))
			set("zerg_weapon_prop/dodge", - weight() / 5000 );
		if( !query("zerg_weapon_prop/parry") && (weight() >= 3000))
			set("zerg_weapon_prop/parry",  weight() / 5000 );
		damage=query("zerg_weapon_prop/damage");
	}
	else if(query("protoss_weapon_prop"))
	{
		if( !query("protoss_weapon_prop/dodge") && (weight() >= 5000))
			set("protoss_weapon_prop/dodge", - weight() / 5000 );
		if( !query("protoss_weapon_prop/parry") && (weight() >= 3000))
			set("protoss_weapon_prop/parry",  weight() / 5000 );
		damage=query("protoss_weapon_prop/damage");
	}
	else if(query("weapon_prop"))
	{
		if( !query("weapon_prop/dodge") && (weight() >= 5000))
			set("weapon_prop/dodge", - weight() / 5000 );
		if( !query("weapon_prop/parry") && (weight() >= 3000))
			set("weapon_prop/parry",  weight() / 5000 );
		damage=query("weapon_prop/damage");
	}
	
	if(!clonep(this_object())) 
	{
		if(this_object()->is_weapon())
		{
			log_file( "info/weapon", sprintf("[檔案:%s]\n名稱(%s) 材質(%s)  重量(%d) 價值(%d) 傷害(%d) 體積(%d) 耐用(%d)。\n"
				,base_name(this_object())
				,this_object()->short(1)
				,query("material")? query("material"):"無"
				,weight()
				,value
				,damage
				,volume
				,durable
				));
		}
		if(this_object()->is_armor())
		{
			log_file( "info/armor", sprintf("[檔案:%s]\n名稱(%s) 材質(%s)  重量(%d) 價值(%d) 防禦(%d) 體積(%d) 耐用(%d)。\n"
				,base_name(this_object())
				,this_object()->short(1)
				,query("material")? query("material"):"無"
				,weight()
				,value
				,armor
				,volume
				,durable
				));
		}
	}
}

/* int query_autoload() { return 0; } */