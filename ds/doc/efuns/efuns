陣列:
allocate           配置記憶體給一個陣列 (array)
filter_array       傳回一個過濾舊陣列內容的新陣列
map_array          經由一個函式修改一個陣列的元素 (element)
member_array       在一個陣列 (array)  或字串 (string) 中找尋指定的
                   項目 (item) , 並傳回此項目為第幾項的索引.
sort_array         排序一個陣列
unique_array       將一個物件陣列分組

暫存:
allocate_buffer    配置記憶體給一個暫存區 (buffer)
crc32              計算一個暫存區或字串的循環重覆碼 (cycle redundency code)
read_buffer        以緩衝區資料 (buffer) 的型態傳回檔案的內容,或是以
                   字串型態 (string) 傳回緩衝區一部份的資料
write_buffer       將一個暫存區 (buffer) 寫入一個檔案, 或從某個資料來
                   源讀進一個暫存區

呼叫:
call_other         呼叫在另一個物件中的函式
call_out           延遲呼叫同一個物件中的函式
call_stack         
catch              找出函式運作的錯誤
origin             判斷目前的函式是如何被呼叫的
previous_object    傳回呼叫目前這個函式的物件 (或物件列表)
query_shadowing    判斷指定的物件是否為其他物件的投影 (shadow)
remove_call_out    取消一個延遲中的外部呼叫 (call_out)
remove_shadow      
shadow             作為一些物件的一個或多個函式的投影 (shadow)
this_object        傳回呼叫此函式物件的物件指標 (object pointer)
throw              強制一個物件產生錯誤

編譯:
generate_source    產生與指定物件相對照的 C 程式碼

檔案:
cp                 複製一個檔案
file_length        
file_size          取得檔案的大小
get_dir            傳回有關一個檔案系統目錄 (filesystem directory)  的資訊
link               將一個檔案與另一個檔案鏈結
mkdir              創造一個目錄
read_bytes         從一個檔案或是一個字串讀取一連串連續的位元組 (byte)
read_file          把一個檔案的內容讀進一個字串變數裡
rename             更改一個檔案的名稱
rm                 刪除一個檔案
rmdir              刪除一個目錄
stat               傳回與一個檔案或一個目錄相關的資訊
write_bytes        將連續的位元組寫入檔案
write_file         將一個字串加入檔案

浮點運算:
acos               傳回一個浮點數 (float) 的反餘弦值
asin               傳回一個浮點數 (float) 的反正弦值 (arcsine)
atan               傳回一個浮點數的正切值 (tangent)
ceil               把一個浮點數進位成最近的整數值
cos                傳回一個浮點數的餘弦值 (cosine)
exp                傳回一個浮點數的餘弦值 (cosine)
floor              找到最靠近一個浮點數, 而小於或等於此浮點數的整數,
                   意即把一個浮點數的小數位捨去
log                傳回一個浮點數的自然對數
pow                計算一個浮點數 (float) 的乘冪
sin                傳回一個浮點數的正弦值 (sine)
sqrt               傳回一個浮點數的平方根 (square root)
tan                傳回一個浮點數的正切值 (tangent)
to_int             將一個浮點數或暫存區 (buffer) 轉換為一個整數

函式:
bind               變更一個函式指標 (function pointer)所指向的函式
evaluate           執行一個函式指標 (function pointer)
function_owner     

一般:
copy
fetch_variable
filter
map                經過一個函式修改一個映射變數、陣列或字串
restore_variable   從一個字串讀回變數值
save_variable      將變數值儲存為一個字串 (string)
sizeof             傳回一個陣列 (array)、映射 (mapping)、暫存區 (buffer)
                   、或是字串 (string) 的元素數目
store_variable     
typeof             傳回一個式子 (expression) 的資料型態 (type)

互動:
add_action         把區域函式 (local function) 加進玩家可用的
                   命令動詞 (command verb)
command            如同該物件般, 執行一個命令
commands           傳回一些關於此使用者可以使用的命令資訊
disable_commands   設定一個活著的 (living) 物件為「非活著」(non-living)
disable_wizard     取消一個物件的巫師特權
ed                 編輯一個檔案
ed_cmd             對一個正在執行的 ed 工作 (session)送出一個命令
ed_start           開始執行一個 ed 工作
enable_commands    允許物件使用玩家 (player) 的命令
enable_wizard      將巫師的特權給予一個物件
exec               將一個可互動的 (interactive) 玩家 (player)物件切換
                   連結 (connection) 到另外一個物件上
find_player        用名字尋找一個玩家
get_char           讓之後輸入的字元送往一個指定的函數
in_edit            判斷一個玩家是否在文書編輯程式中
in_input           判斷一個玩家是否正在 input_to 函式的輸入模式中
input_to           讓下一行輸入的內容送往一個指定的函式
interactive        判斷一個指定的物件是否為「可互動的」(interactive)
message            送訊息給活著的 (living) 物件
notify_fail        傳回一段錯誤訊息
printf             轉換成指定格式的輸出結果
query_ed_mode      詢問目前編輯程式 (ed) 執行的狀態
query_host_name    傳回使用的主機名稱 (host name)
query_idle         詢問一個互動的 (interactive) 玩家已經發呆 (idle) 幾秒
query_ip_name      傳回指定玩家的 ip 名稱
query_ip_number    傳回玩家物件的 ip 號碼
query_ip_port      
query_notify_fail  
query_snoop        傳回誰正在監聽指定的互動 (interactive) 物件
query_snooping     傳回正在監聽 (snoop) 的物件
receive            對目前的物件顯示一段訊息
remove_action      從區域函式 (local function) 中解除一個
                   命令動詞 (command verb)
remove_interactive 
resolve            
say                把訊息送給所有在同一個環境中的使用者
set_this_player    使指定物件變成新的 this_player()
shout              對所有活著的 (living) 物件送出訊息
snoop              窺視一個可互動的使用者 (interactive user)
this_interactive   傳回呼叫此函式的玩家物件
this_player        傳回呼叫此函式的玩家 (player) 物件
this_user          
userp              判斷指定的物件是否曾為可互動 (interactive)
users              傳回一個包含所有可互動 (interactive) 玩家的陣列
wizardp            判斷指定的物件是否執行過 enable_wizard()
write              對目前的玩家送出訊息

內部:
cache_stats        報告驅動程式 (driver) 和 Mud 函式庫(mudlib) 的變
                   化統計資料
debug_info         顯示除錯 (debug) 資訊
debugmalloc        將已配置的記憶體 (malloc'd memory)資訊傾印
                   到一個檔案裡
dump_file_descriptors 傾印 MudOS 程序的檔案描述值表
dump_prog          傾印/反組譯一個 LPC 物件
dump_socket_status 
dumpallobj         報告所有載入之物件的一些統計資料
get_config         詢問一些驅動程式 (driver) 的系統設定值 (config settings)
malloc_status      報告一些記憶體使用情形的統計資料
memory_info        取得一個物件或整個 mud 的記憶體使用量
mud_status         報告一些驅動程式 (driver) 及 mud 函式庫(mudlib)
                   的統計數字
opcprof            報告一些外部函式 (efuns) 被呼叫的頻率
query_load_average 報告 mud 的系統平均負載量 (load average)
refs               傳回一個資料結構的參考數字
rusage             報告以系統呼叫 (system call) getrusage() 收集的資訊
set_debug_level    設定驅動程式 (driver) 使用 debug()巨集 (macro)
                   時, 其除錯 (debug) 的等級
set_malloc_mask    設定控制記憶體配置的除錯資料顯示的遮罩
                   (the mask controlling display of malloc debug info)
swap               直接把一個檔案交換 (swap) 出去
time_expression    傳回計算一個式子 (expression) 所需的真實時間
trace              設定追蹤旗標 (trace flags) 並傳回舊的旗標值
traceprefix        決定該追蹤哪一個物件

映射:
allocate_mapping   預先配置 (pre-allocate) 一塊記憶體給一個
                   映射 (mapping)
filter_mapping     以一個函數為準, 移除一個映射變數中的某些元素
keys               傳回在一個映射變數 (mapping) 中所有(關鍵字, 內容值)
                   (即 (key, value) ) 資料關鍵字的陣列 (array)
m_delete           
m_indices          
m_values           
map_delete         以關鍵字從一個映射變數中刪除一對 (關鍵字, 內容值)
                   ((key, value))
map_mapping        經由一個函式修改一個映射變數中的元素
match_path         在一個映射變數 (mapping) 中找尋路徑名稱 (path)
unique_mapping     以一個函式為準, 從一個陣列另創一個映射 (mapping)
values             從一個映射變數的 (關鍵字, 內容值) ( (keys, values) )
                   中, 以陣列傳回內容值

混合:
arrayp             看一個給定的變數是否為陣列 (array)
bufferp            看一個給定的變數是否為一個暫存區 (buffer)
classp             
floatp             判斷指定的變數是否為浮點數
functionp          傳回一個包含所有可互動 (interactive) 玩家的陣列
intp               判斷一個給定的變數是否為一個整數
mapp               判斷一個指定的變數是否為映射變數 (mapping)
objectp            判斷一個指定的變數是否為一個物件 (object)
pointerp           判斷指定的變數是否為一個陣列 (array)
stringp            判斷一個變數是否為字串型態 (string)
undefinedp         判斷指定的變數是否尚未定義

函式庫:
author_stats       傳回作者的一些統計資料domain_stats       傳回區域的一些統計資料
export_uid         設定一個物件的使用者識別名稱 (user id, uid)
find_living        找出一個指定識別名稱 (id) 的活(living)物件
geteuid            傳回一個物件或是一個函式的有效使用者識別
                   名稱 (effective user id, euid)
getuid             傳回一個物件的使用者識別名稱 (user id, uid)
living             判斷一個指定的物件是否「活著」
livings            傳回所有活著 (living) 物件的一個陣列
query_privs        傳回一個物件的私有字串 (privs string)
set_author         設定與一個物件相關的作者
set_light          更改或詢問一個物件的照明程度 (light level)
set_living_name    設定一個活著的 (living) 物件的生物名稱(living name)
seteuid            設定一個物件的有效使用者識別名稱 (effectiveuser id, euid)

數值:
random             傳回一個「假性」亂數 (pseudo-random number)
to_float           將一個整數轉換成一個浮點數

物件:
all_inventory      傳回一個物件的內容物品
children           傳回一個指定物件 (object) 所複製出來的物件陣列
clone_object       載入一個物件的複製物件
clonep             檢查給定的一個變數是否為複製的物件
deep_inventory     傳回一個物件的內容物品, 如果物品中會以還含有物品,
                   將會以巢狀的方式繼續找下去
destruct           從遊戲中銷毀一個物件
environment        傳回一個物件所身處的環境
file_name          取得一個物件的檔案名稱
find_object        以指定的檔案名稱尋找一個物件
first_inventory    傳回一個物件內含的第一件物品
heart_beat_info    
heart_beats        
load_object        以檔案名稱來尋找或載入一個物件
master             傳回主宰物件 (master object)
move_object        把目前的物件搬到其他的環境 (environment) 中
new                載入並複製一個物件
next_inventory     傳回同一物件內容物 (inventory)中的下一個物件
objects            傳回一個已載入之物件的陣列 (array)
present            以物品的辨識名稱 (id) 尋找物件
query_heart_beat   詢問一個物件的心跳 (heart beat) 狀況
reload_object      把一個物件還原成剛剛載入的狀態
set_heart_beat     開始或取消一個物件的心跳 (heartbeat)
set_hide           對一個可以藏匿的物件設定藏匿旗標 (hide flag)
tell_object        將訊息送給一個物件
tell_room          對一個房間中的所有物件送出訊息
virtualp           判斷指定的變數是否指向一個虛擬 (virtual)物件

分析:
query_verb         傳回現在執行的命令名稱
TODO

socket:
socket_accept      接受一個 socket 的連接(connection)
socket_acquire     接收一個 socket 的所有權(ownership)
socket_address     傳回一個 efun socket 的遠端位址
socket_bind        命名(bind)一個 socket
socket_close       關閉一個 socket
socket_connect     初始化一個 socket 上的連接(connection)
socket_create      建立一個 efun socket
socket_error       傳回一個 socket 錯誤碼的文字敘述
socket_listen      傾聽(listen)一個 socket 的連接(connection)
socket_release     釋放一個 socket 的所有權(ownership)給另一物件
socket_write       透過一個 socket 傳送資料

字串:
capitalize         把一個字串的第一個英文字元
clear_bit          清除一個字串中的某一個 bit
crypt              對一個字串進行編碼
explode            打斷一個字串
implode            連結多個字串
lower_case         轉換一個指定字串的內容為小寫
pluralize          
reg_assoc          一個正規樣式(regular pattern)子字串擷取器(extractor)
regexp             正規描述式(regular expression)處理程式
repeat_string      
replace_string     替換一個字串中符合條件的字
set_bit            設定一個位元字串 (bitstring) 中的一個位元 (bit)
sprintf            轉換成指定格式的輸出結果
sscanf             從一個字串中讀進與指定格式相符的資料
strcmp             判斷兩個字串間的語句關係 (lexical relationship)
strlen             傳回一個字串的長度
strsrch            在一個字串中尋找特定的字串terminal_colour    
test_bit           檢查一個位元字串 (bitstring) 中某一個位元(bit) 的值
upper_case         

系統:
all_previous_objects 傳回所有呼叫目前函式的物件陣列
call_out_info      取得延遲中的 call_out() 資訊
check_memory       
ctime              傳回一個時間字串
deep_inherit_list  取得一個物件所繼承的父物件(parent object)
error              產生一個執行時段 (run_time) 錯誤
eval_cost          傳回執行耗費時間 (evaluation cost) 還剩多少
external_start     
find_call_out      找到行程中下一個會被呼叫的點召(call out)
flush_messages     
function_exists    找出含有指定函式的檔案
function_profile   對一個物件取得函式的側寫 (profiling) 資訊
functions          
inherit_list       取得一個物件所繼承的父物件 (parents)清單
inherits           判斷一個物件是否繼承一個指定的檔案
localtime          轉換成本地時間
lpc_info           
max_eval_cost      傳回最高的執行耗費時間 (evaluation cost)
memory_summary     
named_livings      
program_info       
reclaim_objects    清除殘留在記憶體中的物件
replace_program    把 this_object() (目前這個物件)的程式置換掉
replaceable        
reset_eval_cost    重新設定剩下的執行耗費時間數字
set_eval_limit     設定執行耗費時間 (evaluation cost)的上限值
set_reset          更改一個物件距離下次重新設定 (reset) 的時間
shallow_inherit_list 
shutdown           關閉 mud 驅動程式 (driver)
uptime             傳回上一次驅動程式 (driver) 啟動至今的秒數
variables