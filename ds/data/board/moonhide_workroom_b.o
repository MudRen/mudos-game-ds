#/obj/board/moonhide_b.c
dbase (["unit":"­±","board_id":"moonhide_workroom_b","capacity":100,"id":"board","location":"/u/m/moonhide/workroom","name":"[1;36mMoonhide's Board[0m","no_get":1,"no_sac":1,"notes":({(["msg":"No.1","author":"¦wÀR(acme)","title":"¡´No.1","time":1005311525,]),(["msg":"np.2no.2--OD°¸¬OwIz","author":"µêªÅ(yunin)","title":"¡´2","time":1005387746,]),(["msg":"ya~....²Ä¤T!!--","author":"ªü¤£«ä¡´¾H¤£§Q¦h(piliykt)","title":"¡´3","time":1005914819,]),(["msg":"¼K«¦","author":"­·²M´­(truewind)","title":"¡´¼K«¦","time":1006065050,]),(["msg":"addoil--¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¹¡@¡@¡@¡¸µo§b¡¸¡@»P¡@¡¸¯«¸t¡¸¡@¨Ã­«ªº¤p§Å®v¡@¡@¡@¡@¡@¡@¡@¡¸¡¹¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¢Ï¢Ú¢×¢Ñ¢Ù¢ç¢ã¢Ó¢Ü¡@¦r¡@¡¸¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹","author":"¥i·Rªº¤p³Í(alickyuen)","title":"¡´no.5","time":1006085190,]),(["msg":"§Aªºwestarea¦³¥H¤U2­ÓºÃ°İ²Ä¤@/u/m/moonhide/westarea/pill.c ¬O¤°»ò¥Îªº«ç®³?§Ú¬d¤£¨ìlook²Ä¤G,§Aªºwar¤Ó¨S¦³§l¤Ş¤O¤F,§A¥´ºâ«ç¼Ë°µ?¿ú¤S¤Ö,mob¤S¤Ö,weapon¤SÄê§A¬İ¬İ¦³¨S·sªº·Qªk¥h§l¤Şppl¨Óplay war lor--¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¹¡@¡@¡@¡¸µo§b¡¸¡@»P¡@¡¸¯«¸t¡¸¡@¨Ã­«ªº¤p§Å®v¡@¡@¡@¡@¡@¡@¡@¡¸¡¹¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¡@¢Ï¢Ú¢×¢Ñ¢Ù¢ç¢ã¢Ó¢Ü¡@¦r¡@¡¸¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹¡¸¡¹","author":"¥i·Rªº¤p³Í(alickyuen)","title":"¡´to moonhide","time":1007878686,]),(["msg":"[0;1;36m¡[1mi[1m¶[1m¢[1m²[1má[1m¡[1mj[1;33mÄ[1mÑ[1m¥[1m][1m¶[1mW[1m¤[1mH[0m(Moonhide)¡R¥¦»¡¥¦¤¤¤È¤~©ñ/u/m/moonhide/dragonarea/npc/obj> /u/m/moonhide/dragonarea/npc/obj> [33mgoto 9[0m[0;1;30m [1m [1m¤[1m@[1m°[1m}[1m·[1mÏ[1mÃ[1mú[1mÄ[1mÆ[1m¹[1mL[1m,[1m [1mÁ[1m÷[1mÀ[1ms[1mª[1mº[1m¨[1m­[1m¼[1mv[1mº[1m¥[1mº[1m¥[1m¾[1m®[1mµ[1m²[1m¦[1m¨[1m«[1m¬[1m¡[1mT[0m[0;1m [1m¡[1my[1m°[1m{[1m¤[1mH[1mÅ[1mo[1m~[1m [1m¡[1mz[1m¥[1mu[1m¨[1m£[1m§[1mA[1m©[1m¹[1m¤[1mÑ[1mª[1mÅ[1m¤[1m@[1mÅ[1mD[1m¡[1mM[1m¤[1mÆ[1m¨[1m­[1m¬[1m°[1m¤[1m@[1m°[1m¦[1m¤[1mp[1m½[1m¿[1m½[1m»[1m¡[1mM[1m°[1mÔ[1m°[1mÔ[1m°[1mÔ[1m~[1mª[1mº[1m­[1m¸[1m¨[1m«[1m¤[1mF[1m¡[1mC[0m©s§ø¶l§½ - /open/world1/tmr/area/post_office±H H ¤H¡RÁ÷Às(piece)§ÚÄ±±o¥i¥H¦bµµ¨FÀJ¹³¨ºÃä³]¤@­Ó©¹¤Uªº¤J¤f,¬O³q¥j¹Óªº¦a¹D¸ò¦a¤U«Ç.¦Ó¶}±Ò¤J¤fªº¤èªk©O,¥i¥H³]¦¨¥Î­«¼C¼AÃaµµ¨FÀJ¹³¦Ó²{¥X¤J¤f,¦Ó­«¼C¤]¦]¦Ó·lÃa¦a¹D¤¤¥i¥H¼W¥[ mob ¦p.§õ²ö·T,¾÷ÃöÅK¤H¼W¥[eq. §g¤l¼C,²Q¤k¼C,¦B¾z»È°w,¸È¤l,¤k¥Î¾c¤l,¤k¥Î¤â®M»¡©ú. ³o­Ó area ¥i¥H©ñÅı¥j¹Ó¬£¶i¶¥ªºª««~,·íµM­n k ¦º§õ²ö·T¤~®³±o¨ì,      eq ¤è­±°¾¦V¤k¥Îªº¬°¥D,¤ñ¤@¯ëªº¦n¤@ÂI.      ³Q»È°w¨ë¤¤·|¤¤¬r,¬r¯À´X%¬İ§Ü¬r¦Ó©w.      ©Î³\\§â§g¤l¼Cµ¹·¨¹L,·|±o¨ì¥¦ªº¤H¥Ö­±¨ã;§â²Q¤k¼Cµ¹¤pÀs¤k¥i¥H±o¨ì¤@¨Ç¸Ñ¬rªº¤¦ÃÄ¨ä¥¦«ØÄ³. ¤Ñ¬Éªº war ­Y³sÄò¶}¤T¦¸,«h²Ä¤T¦¸µL¤W¦Ü´Lªº¤T­Ó¤À¨­·|­°Á{,¤À§O¸Ë¦³µL¤W¦Ü´L      ªº¤T¼Ë eq. °f¨¤Às²¯(only),¸y±a,Å@µÃ      message. xxx ¥»¦Ü´L°Z¬O¦n´Û,«İ§Ú¤À¨­¤U¤Z¦¬¬B§A!'       ¦Ü´L¹³¤@°}°}¿E¯Pªº§İ°Ê,ÅF¶©¥¨ÅT¤Æ¬°¸H¤ù,·ÏÃúÄjº©¤¤¦ü¥G¦³¤T±ø¤H¼v¯B²{      p.s. ¾Ì¤@­Ó¤H­n solo ¤T°¦¤À¨­¬O«ÜÃøªº,­n¦X§@¤~¯à·F±¼¥¦­Ì.","author":"[1;33mÄÑ¥]¶W¤H[0m(moonhide)","title":"¡´piece","time":1011755593,]),(["msg":"wahaha--[37mby[0m [35m¡m[0;1;5;32m¯[1;5me[1;5m­[1;5m·[0;1;37m¤[1m§[1;33m¼[1mC[1;31m¶[1mÆ[1m¯[1mº[1;36m¥[1m@[1m¶[1m¡[0;35m¡n[0m","author":"­»¯ó¦B²N²O³J¿|(dreamcast)","title":"¡´wahaha","time":1014306113,]),(["msg":"[36m: ¡´piece        [Jan 23][1;33mÄÑ¥]¶W¤H(moonhide)ªº°ª¨£:: =============================================================: [0;1;36m¡[1mi[1m¶[1m¢[1m²[1má[1m¡[1mj[1;33mÄ[1mÑ[1m¥[1m][1m¶[1mW[1m¤[1mH(Moonhide)¡R¥¦»¡¥¦¤¤¤È¤~©ñ: /u/m/moonhide/dragonarea/npc/obj> : /u/m/moonhide/dragonarea/npc/obj> [33mgoto 9: [0;1;30m [1m [1m¤[1m@[1m°[1m}[1m·[1mÏ[1mÃ[1mú[1mÄ[1mÆ[1m¹[1mL[1m,[1m [1mÁ[1m÷[1mÀ[1ms[1mª[1mº[1m¨[1m­[1m¼[1mv[1mº[1m¥[1mº[1m¥[1m¾[1m®[1mµ[1m²[1m¦[1m¨[1m«[1m¬[1m¡[1mT: [0;1m [1m¡[1my[1m°[1m{[1m¤[1mH[1mÅ[1mo[1m~[1m [1m¡[1mz[1m¥[1mu[1m¨[1m£[1m§[1mA[1m©[1m¹[1m¤[1mÑ[1mª[1mÅ[1m¤[1m@[1mÅ[1mD[1m¡[1mM[1m¤[1mÆ[1m¨[1m­[1m¬[1m°[1m¤[1m@[1m°[1m¦[1m¤[1mp[1m½[1m¿[1m½[1m»[1m¡[1mM[1m°[1mÔ[1m°[1mÔ[1m°[1mÔ[1m~[1mª[1mº[1m­[1m¸[1m¨[1m«[1m¤[1mF[1m¡[1mC: ©s§ø¶l§½ - /open/world1/tmr/area/post_office: ±H H ¤H¡RÁ÷Às(piece): §ÚÄ±±o¥i¥H¦bµµ¨FÀJ¹³¨ºÃä³]¤@­Ó©¹¤Uªº¤J¤f,¬O³q¥j¹Óªº¦a¹D¸ò¦a¤U«Ç.: ¦Ó¶}±Ò¤J¤fªº¤èªk©O,¥i¥H³]¦¨¥Î­«¼C¼AÃaµµ¨FÀJ¹³¦Ó²{¥X¤J¤f,¦Ó­«¼C¤]¦]¦Ó·lÃa: ¦a¹D¤¤¥i¥H¼W¥[ mob ¦p.§õ²ö·T,¾÷ÃöÅK¤H: ¼W¥[eq. §g¤l¼C,²Q¤k¼C,¦B¾z»È°w,¸È¤l,¤k¥Î¾c¤l,¤k¥Î¤â®M: »¡©ú. ³o­Ó area ¥i¥H©ñÅı¥j¹Ó¬£¶i¶¥ªºª««~,·íµM­n k ¦º§õ²ö·T¤~®³±o¨ì,:       eq ¤è­±°¾¦V¤k¥Îªº¬°¥D,¤ñ¤@¯ëªº¦n¤@ÂI.:       ³Q»È°w¨ë¤¤·|¤¤¬r,¬r¯À´X%¬İ§Ü¬r¦Ó©w.:       ©Î³\\§â§g¤l¼Cµ¹·¨¹L,·|±o¨ì¥¦ªº¤H¥Ö­±¨ã;§â²Q¤k¼Cµ¹¤pÀs¤k¥i¥H±o¨ì¤@¨Ç¸Ñ¬rªº¤¦ÃÄ: ¨ä¥¦«ØÄ³. ¤Ñ¬Éªº war ­Y³sÄò¶}¤T¦¸,«h²Ä¤T¦¸µL¤W¦Ü´Lªº¤T­Ó¤À¨­·|­°Á{,¤À§O¸Ë¦³µL¤W¦Ü´L:       ªº¤T¼Ë eq. °f¨¤Às²¯(only),¸y±a,Å@µÃ:       message. xxx ¥»¦Ü´L°Z¬O¦n´Û,«İ§Ú¤À¨­¤U¤Z¦¬¬B§A!: '       ¦Ü´L¹³¤@°}°}¿E¯Pªº§İ°Ê,ÅF¶©¥¨ÅT¤Æ¬°¸H¤ù,·ÏÃúÄjº©¤¤¦ü¥G¦³¤T±ø¤H¼v¯B²{:       p.s. ¾Ì¤@­Ó¤H­n solo ¤T°¦¤À¨­¬O«ÜÃøªº,­n¦X§@¤~¯à·F±¼¥¦­Ì.[0m¥i¥H³]©w¦¨¤k©Ê¨¤¦â±M¥Î:P[0m","author":"ò](sdo)","title":"¦^ÂĞ:piece","time":1014398128,]),(["msg":"--[0;1;34mù[1mİ[1mù[1mù[1mù[1mù[1mù[1mù[1m¢[1m¡[1mù[1mİ[1mù[1mß[1mù[1mİ[1mù[1mù[1mù[1mß[1mù[1mİ[1mù[1mù[1mù[1mù[1mù[1mù[1m¢[1m¡[1mù[1mİ[1mù[1mù[1mù[1mù[1mù[1mù[1mù[1mß[1mù[1mİ[1mù[1mù[1mù[1mù[1mù[1mù[1m¢[1m¡[0m[0;1;34mù[1mø[1m [1m [1m [1m [1m [1m [1mù[1mø[1mù[1mø[1m¢[1m¢[1m¢[1m£[1m [1m [1mù[1mø[1mù[1mø[1m¢[1m~[1m¢[1m¡[1m [1m [1mù[1mø[1mù[1mø[1m [1m [1mù[1mù[1mù[1mù[1mù[1mâ[1mù[1mø[1m [1mù[1mù[1m [1m [1m [1mù[1mø[0m[0;1;34mù[1mø[1mù[1mø[1mù[1mø[1m [1m [1mù[1mø[1mù[1mø[1m [1m [1m [1m [1m [1m [1mù[1mø[1mù[1mø[1m¢[1m¢[1m¢[1m£[1m [1m [1mù[1mø[1mù[1mø[1m [1m [1mù[1mù[1mù[1mù[1mù[1mâ[1mù[1mø[1mù[1mİ[1m¢[1m¡[1m [1m [1m¢[1m£[0m[0;1;34mù[1mã[1mù[1må[1mù[1må[1mù[1mù[1mù[1må[1m¢[1m¢[1mù[1mù[1mù[1mù[1mù[1mù[1m¢[1m£[1mù[1mã[1mù[1mù[1mù[1mù[1mù[1mù[1m¢[1m£[1mù[1mã[1mù[1mù[1mù[1mù[1mù[1mù[1mù[1må[1mù[1mã[1mù[1må[1mù[1mã[1mù[1mù[1mù[1må[0m","author":"¤W©x¼¦¨à(muder)","title":"¡´1","time":1014480649,]),(["msg":"¡·===============================°ò¥»ª¬ºA=============================¡·¢x  ©m¦W: ¤ëÁô(moonhide)  ¢x ¥Í¨°: ¥Ò¤È¦~®É     ¢x©Ê§O: ¨k(male)      ¢x¢u¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t¢x  ·½¥X: ¶§¬u°s®a        ¢x®v©Ó: ¤p·í®a(Master)¢x µû½×: 123344566    ¢x¢u¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t¢x  ¼p§Ş:  23432423432422 ¢x±o·N§Ş: «æ³tª£¬µ    ¢x   ¼p¨ã: ¥ÉÀsÁç     ¢x¢u¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t¢x  ¥Í©R¤O: 1754  /  1754 ¢x Åé¤O: 500 / 500    ¢x  ºë¤O: 652 / 6052  ¢x¢|¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢r¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢r¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢}®v©Ó: ¤p·í®a(Master 1)->µû½×: µ¥©ó[Án±æ] (·Q·Q¥i¥H©ñ¦b¤°»ò¥Î³~?)¼p§Ş: µ¥©óExp (·Q·Qexp¥i¥H©ñ¦b¤°»ò¥Î³~?)±o·N§Ş: Special Skills ¸Ì³Ì°ªªº¼p¨ã: Wield WeaponHP: ¸ÑQuest ¥ÎªºÅé¤O: °µµæ®É·|·l¯Óºë¤O: ¾ÇSkills¥Î£x===================================================================sk:(¤£¥H¥´°«¬°µo®i)   for ex:«CÀs²r¤û±Ù(skµLµ¥¯Å,¥D­n¬O¾Çªº©Û¦¡,¦p¾Ç¨ì¦¹©Û,´N¥i¨Ï¥Î¥X)«CÀs²r¤û±Ù------>¤@©w­n«ô[±ç¤s§B]¥[:  ±o·N§Ş¤§¨Ï¥Îªk¬° using-special + < Skill >   ´N¬O,§Ş¯à¥u¯à¥Î¤@¼Ë,­n±q Skills ¸Ì¿ï¤@.","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´.","time":1014906135,]),(["msg":"test--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´test","time":1015083899,]),(["msg":"#include <ansi.h>inherit NPC;void create(){        set_name(HIW\"¥ú¤§¤l\"NOR, ({ \"son of light\",\"son\",\"light\" }) );        set(\"long\",@LONG½YÀs«°ªºÀY¸¹¥´¤â¡A¥i¥H®³¨ì³q©¹¤¸¯À¤§ªùªºÁ¼©³¡C LONG);          set(\"gender\", \"¨k©Ê\");          set(\"race\", \"¤HÃş\");        set(\"level\",45);        set(\"age\",50+random(2));        set(\"title\",HIY\"Às\" HIG\"ªº¶Ç¤H\");        set_skill(\"unarmed\",100);        set_skill(\"dodge\",200);         set_skill(\"parry\",100);               set_skill(\"combat\",200);        set(\"combat_exp\",1000000);        set(\"max_exp\",50000);        set(\"max_hp\",30000);     setup();       carry_object(__DIR__\"obj/dragonblade\")->wield();      carry_object(__DIR__\"obj/pants\")->wear();     carry_object(__DIR__\"obj/ring\")->wear();     carry_object(__DIR__\"obj/cloth\")->wear();        carry_object(__DIR__\"obj/hands\")->wear();       carry_object(__DIR__\"obj/armor\")->wear();     carry_object(__DIR__\"obj/boots\")->wear(); }int special_attack(object me,object target,int hitchance){    int tdex,tcon;    if(!me || !target) return 0;    if(random(10)) return 0;    tdex=target->query_dex();    tcon=target->query_con();    if(random(hitchance*10) > tdex+tcon)    {      message_vision(\"\\n\"                    +HIW\"$N¨Ï¥X¤ÛÀsªk¤§¦Ê¨BÀs\\n\" NOR                    +HIW\"µL¼Æªº¸}°}½ğ¦V$n........¡I¡I\\n\"NOR                    +HIW\"³y¦¨ÄY­«ªº½ğ¶Ë..!!!\\n\"NOR                    ,me,target);      target->receive_damage(\"hp\",600+random(200), this_object());      return 1;     }    else    {      message_vision(\"\\n\"                    +HIR\"$N¨Ï¥X¤ÛÀsªk¤§¤éª¢Às\\n\" NOR                    +HIR\"¤@ªiªiªºªºÚ]´x§ğ¦V$n¡I¡I\\n\" NOR                     +HIR\"³y¦¨ÄY­«ªº´x¶Ë......\\n\\n\"NOR                    ,me,target);            target->receive_damage(\"hp\",600+random(200), this_object());      return 1;    }      else    {      message_vision(\"\\n\"                    +WHT\"$N¨Ï¥X¤ÛÀsªk¤§¹ĞªÅÀs\\n\" NOR                    +WHT\"$N¨­Åé¹³¬O­¸°_¨Ó¯ëªºÅ§¦V$n¡I¡I\\n\" NOR                    +WHT\"³y¦¨ÄY­«ªº·ï¶Ë\\n\\n\"NOR                    ,me,target);            target->receive_damage(\"hp\",600+random(200), this_object());      return 1;    }else    {      message_vision(\"\\n\"                    +HIB\"$N¨Ï¥X¤ÛÀsªk¤§¤ë¼vÀs\\n\" NOR                    +HIB\"Âù¤âµe¶ê¡A¦b¯İ¤f¾®¦¨¤@¤ë²Å¡A[³Ü]ªº¤@Án¡A¥´¦V$n¡I¡I\\n\" NOR                    +HIB\"³y¦¨ÄY­«ªº¤º¶Ë\\n\\n\"NOR                    ,me,target);            target->receive_damage(\"hp\",600+random(200), this_object());      return 1;    }else    {      message_vision(\"\\n\"                    +HIC\"$N¨Ï¥X¤ÛÀsªk¤§¶³¶ÆÀs\\n\" NOR                    +HIC\"¤j¶q¤ô®ğº¥º¥¾®»E¡A¹³¸U°w¯ëªº®g¦V$n¡I\\n\" NOR                    +HIC\"³y¦¨ÄY­«ªº¬ï¨ë¶Ë\\n\\n\"NOR                    ,me,target);            target->receive_damage(\"hp\",600+random(200), this_object());      return 1;    }else    {      message_vision(\"\\n\"                    +HIG\"$N¨Ï¥X¤ÛÀsªk¤§²±­·Às\\n\" NOR                    +HIG\"$N¥H§Ö¥´ºC¡A§ğªº$n¤£¤§«ç»ò¿ì¡A²×©ó¤£¼Ä¦Ó¤¤©Û¡I¡I\\n\" NOR                    +HIG\"³y¦¨ÄY­«ªºÀ»¶Ë\\n\\n\"NOR                    ,me,target);            target->receive_damage(\"hp\",600+random(200), this_object());      return 1;    }}void die(){   object ob,obj;   obj=new(__DIR__\"/obj/money/coin\");        if( !ob = query_temp(\"last_damage_from\") )        ob = this_player(1);        if( !ob )         {                ::die();                return;        }        message(\"world:world1:vision\",    HIR\"\\n¡i ½Y Às «° ¡j\"+HIW \"¥ú¤§¤l¦º¦b\"+ob->name(1)+\"ªº¤â¸Ì¡C\\n\\n\"+NOR            ,users());        ob->add(\"popularity\",4);      message_vision( \"$N\"+HIB\"¤pÁnªº»¡ : ¦bÃÄ¾Qªº«á­± . . . . . . \"NOR ,this_object() );         ::die();        return;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´.","time":1015155441,]),(["msg":"//¤p§Ì¦Û¤v¶Ã¼gªºforce||moonhide #include <ansi.h> inherit SKILL;void delay(object me);int exert(object me,object target, string arg){        int force,fighting_adm,heal;        force=me->query_skill(\"force\",4);        fighting_adm=me->query_skill(\"fighting_adm\",2);        heal=(force+fighting_adm)/2;         if(arg==\"heal\" )        {        if(me->query(\"ap\") < heal/3 )                 return notify_fail(\"§A¥Ø«eªºª¬ªp¤£¦n¡AµLªk¨Ï¥Î°«¤§«l¡C\\n\");        if(me->query(\"hp\") == me->query(\"max_hp\"))                     return notify_fail(\"§A²{¦b¨Ã¨S¦³¨ü¶Ë®@¡C\\n\");        message_vision(HIR \"$N±N¯u®ğ¤ºÀÔ¡A¨Ï¤¦¥Ğ©ñ¼e¡A¦æ©_µ¬¤K¯ß¤§®ğ°~®{¥ş¨­\\n\" NOR,me);        me->receive_damage(\"ap\",heal/3);                if (me->is_fighting() ) me->receive_heal(\"hp\",heal*2/3 );        else me->receive_heal(\"hp\",heal);        me->start_busy(2);        me->improve_skill(\"fighting_adm\",1+random(force/3)+me->query_int()/4 );        me->improve_skill(\"force\",1+random(5+me->query(\"level\"))+me->query_int()/4 );        return 1;        }}int valid_learn(object me){        return 1;}int practice_skill(object me){        return 1;}void skill_improved(object me){        int x,y;        x = me->query_skill(\"fighting_adm\",1);        y = me->query(\"skill/fighting_adm\");                if( x % 20==19 && x > y)        {                if(random(2))                {                        tell_object(me,HIY \"§Aªº´¼¼z´£°ª¤F¡I\\n\" NOR );                        me->add(\"addition/int\", 1);                }                else                {                        tell_object(me,HIY \"§AªºÅé½è´£°ª¤F¡I\\n\" NOR );                        me->add(\"addition/con\", 1);                }                                me->set(\"skill/fighting_adm\",x);        }    } void skill_improved(object me){     int q,k;     q = me->query_skill(\"fighting_adm\",1);     y = me->query(\"skill/fighting_adm\");    if( q% 10=9 && q>k){    is(random(5))    {                  tell_object(me,HIW\"§Aªº¥Í©R¥[ªø¤F\\n\"NOR);                  me->add(\"addition/hp\",random(10));    }    else    {                  tell_object(me,HIW\"§Aªº¤º«l§ó²`¤F\\n\"NOR);                  me->add(\"addition/ap\",random(12));    }                  me-set(\"skill/fighting_adm\",q);}    me->save();   return;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´ÄêÄêsk","time":1015171011,]),(["msg":"#include <ansi.h>inherit NPC;void create(){  set_name(HIW\"µL¦W¦Ñ¤H\"NOR, ({\"unnamed old-man\",\"man\",\"old\",\"unnamed\"}) );  set(\"long\",@LONG¥j¹ÓªººŞ²z­û¡CLONG);  set(\"race\", \"human\");  set(\"unit\",\"°¦\");  set(\"age\",54);   set(\"no_fight\",1);  set(\"level\",30);   set(\"chat_chance\",4);  set(\"chat_msg\",({  \"µL¦W¦Ñ¤H»¡:§Ú¨{¤l¦n¾j°Ú ~ ~ ! !\\n\",  \"µL¦W¦Ñ¤H»¡:±z¥i¥Hµ¹§ÚªF¦è¦Y¶Ü,§Ú·|¥HÂ§¬ÛÃØªº¡C\\n\",  \"µL¦W¦Ñ¤H«y¤F´XÁn¡A¨­Åé¦n¹³¤£«ç»ò¦n  . ..\\n\",}));set_skill(\"unarmed\",50);set_skill(\"staff\",60);set_skill(\"dodge\",120);set_skill(\"parry\",70); setup();carry_object(__DIR__\"red-staff\")->wield();add_money(\"coin\",200);} int accept_object(object who,object ob){object tiger-blade;       if(ob->name()!=\"ÄCÀY\")         return 0;       else {            if(this_object()->query_temp(\"give_blade\"))       {       command(\"think §Ú¤w§âªê¾zµ¹¤H¤F..¸Ó«ç»ò³øµª³o¦ì©O..?\");       command(\"think\"+who->query(\"id\"));       command(\"say ¦n§a ! ¦Ñ¤Ò´N¦A°e¤@¼ËºÀÄ_µ¹§A !\");       return 0;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´test","time":1015513915,]),(["msg":"§Ú·Q¼g­Ó®ÈÀ]²{¦b¼g¥X¨Ó¦³´X­Ó°İÃD       A-------------------B(®ÈÀ]¥~ÀY)       (®ÈÀ]©Ğ¶¡¤º)minetown1           minetownhotel(®ÈÀ]¾÷¾¹¤H)robotwaiter ²Ä¤@­Ó§Ú»İ­nsleep delayªº®É¶¡¤j·§¤­¬í »İ­n§ï­ş¸Ì? ²Ä¤G­Ó¥ğ®§¤¤ªº°T®§void leaveroom(object me){        if(!me) return;        tell_room(this_object(),\"§A©ç©ç¦çªAª¦°_¨Ó¡AµM«á¨«¥X±b´×¡C\\n\");        me->move(__DIR__\"minetown1\");        tell_room(environment(me),me->name()+\"±q±b´×¸Ì¨«¤F¥X¨Ó¡C\\n\",({me}));        return;}code¬O³o¼Ë¤l¤£¹LÀ³¸Ó¥X²{\"§A©ç©ç¦çªAª¦°_¨Ó¡AµM«á¨«¥X±b´×¡C\"ªº®É­Ô«o¥X²{\"\"ºCºC¦a§Aº¥º¥²M¿ô¤F¹L¨Ó....\"³oÀ³¸Ó§ï­ş¸Ì? ²Ä¤T­Órobotwaiter¦¬¿ú¦³ÂI°İÃD §Ú¨S¿ìªkcheckin §Oªº wiz«o¥i¥HµL­­checkin ²Ä¥|­Ó§Ú·Q§âcheckniªº«ü¥O§ï¦¨pay xxx(ª÷¿ú¼Æ) §ÚÀ³¸Ó§ï­ş¸Ì?--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"[1;36m  ¤ë  Áô  [0m(moonhide)","title":"¡´turewind's problem","time":1017659871,]),(["msg":"#include <ansi.h>inherit NPC;void create(){  set_name(HIW\"µL¦W¦Ñ¤H\"NOR, ({\"unnamed old-man\",\"man\",\"old\",\"unnamed\"}) );  set(\"long\",@LONG¥j¹ÓªººŞ²z­û¡CLONG);  set(\"race\", \"human\");  set(\"unit\",\"°¦\");  set(\"age\",54);   set(\"no_fight\",1);  set(\"level\",30);   set(\"chat_chance\",4);  set(\"chat_msg\",({  \"µL¦W¦Ñ¤H»¡:§Ú¨{¤l¦n¾j°Ú ~ ~ ! !\\n\",  \"µL¦W¦Ñ¤H»¡:±z¥i¥Hµ¹§ÚªF¦è¦Y¶Ü,§Ú·|¥HÂ§¬ÛÃØªº¡C\\n\",  \"µL¦W¦Ñ¤H«y¤F´XÁn¡A¨­Åé¦n¹³¤£«ç»ò¦n  . ..\\n\",}));set_skill(\"unarmed\",50);set_skill(\"staff\",60);set_skill(\"dodge\",120);set_skill(\"parry\",70); setup();carry_object(__DIR__\"red-staff\")->wield(); add_money(\"coin\",200);} int accept_object(object who,object ob){object blade;       if(ob->name()!=\"ÄCÀY\")         return 0;        else {            if(this_object()->query_temp(\"give_blade\"))       {       command(\"think §Ú¤w§âªê¾zµ¹¤H¤F..¸Ó«ç»ò³øµª³o¦ì©O..?\");       command(\"think\"+who->query(\"id\"));       command(\"say ¦n§a ! ¦Ñ¤Ò´N¦A°e¤@¼ËºÀÄ_µ¹§A !\");       return 0;} message_vision(\"$Nµ¹¤FµL¦W¦Ñ¤H¤@ÁûÄCÀY\\n\",who,ob);  command(\"µL¦W¦Ñ¤H®³°_¤FÄCÀY¡A°ª¿³ªº¦Y¤F°_¨Ó\\n\");  command(\"smile\"+who->query(\"id\"));  command(\"µL¦W¦Ñ¤H»¡:ÁÂÁÂ§A¡AÁöµM¤£¬O«Ü¹¡¡A¦ı¤]¤£·|«ç»ò¾j¤F\\n\");  command(\"think\"+who->query(\"id\"));  (: command(\"hmm\"):);  blade=new(__DIR__\"blade\");  blade->move(who);       set_temp(\"give_blade\",1);       start_busy(5);//call_out(\"delay\",600,this_object());       return 1;       }}void reset(){           int old;             if(!old) return;            set(\"chat_chance\",5);           set(\"chat_msg\",({           \"µL¦W¦Ñ¤Hªº¨{¤l¤S¾j¤F°_¨Óªº¼Ë¤l...?\\n\",           \"µL¦W¦Ñ¤H¬İµÛ¸ô¤Wªº¤H¡A¤â·b´|µÛ¨{¤l¡A¼L¤Ú·LÅÍ¡AÂù²´ÅS¥X´Á«İªº²´¯«\\n\",           }) );           return 1; }--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´look","time":1017926875,]),(["msg":"[31msentence µ{¦¡:File in/out.BPS and ¿é¤J/¿é¥X­«¾É[0m#include \"stdio.h\"int ns; main()    {      int c;      ns = 0;    c = getchar ();    while( c != EOF )      { check_end(c);      c = getchar ();    }   printf(\" %d sentences\",ns);    }int check_end(ch) int ch;  if(  (ch == '.')     ||(ch == '?')     ||(ch == '!') )       ns = ns +1;}    --[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´1","time":1018023973,]),(["msg":"/****stdio.h - definitions/declarations for standard I/O routines**       Copyright (c) 1985-1997, Microsoft Corporation. All rights reserved.**Purpose:*       This file defines the structures, values, macros, and functions*       used by the level 2 I/O (\"standard I/O\") routines.*       [ANSI/System V]**       [Public]*****/#if     _MSC_VER > 1000#pragma once#endif#ifndef _INC_STDIO#define _INC_STDIO#if     !defined(_WIN32) && !defined(_MAC)#error ERROR: Only Mac or Win32 targets supported!#endif#ifdef  _MSC_VER/* * Currently, all MS C compilers for Win32 platforms default to 8 byte * alignment. */#pragma pack(push,8)#endif  /* _MSC_VER */#ifdef  __cplusplusextern \"C\" {#endif/* Define _CRTIMP */#ifndef _CRTIMP#ifdef  _DLL#define _CRTIMP __declspec(dllimport)#else   /* ndef _DLL */#define _CRTIMP#endif  /* _DLL */#endif  /* _CRTIMP *//* Define __cdecl for non-Microsoft compilers */#if     ( !defined(_MSC_VER) && !defined(__cdecl) )#define __cdecl#endif/* Define _CRTAPI1 (for compatibility with the NT SDK) */#ifndef _CRTAPI1#if     _MSC_VER >= 800 && _M_IX86 >= 300#define _CRTAPI1 __cdecl#else#define _CRTAPI1#endif#endif#ifndef _SIZE_T_DEFINEDtypedef unsigned int size_t;#define _SIZE_T_DEFINED#endif#ifndef _MAC#ifndef _WCHAR_T_DEFINEDtypedef unsigned short wchar_t;#define _WCHAR_T_DEFINED#endif#ifndef _WCTYPE_T_DEFINEDtypedef wchar_t wint_t;typedef wchar_t wctype_t;#define _WCTYPE_T_DEFINED#endif#endif /* ndef _MAC */#ifndef _VA_LIST_DEFINED#ifdef  _M_ALPHAtypedef struct {        char *a0;       /* pointer to first homed integer argument */        int offset;     /* byte offset of next parameter */} va_list;#elsetypedef char *  va_list;#endif#define _VA_LIST_DEFINED#endif/* Buffered I/O macros */#if     defined(_M_MPPC)#define BUFSIZ  4096#else  /* defined (_M_MPPC) */#define BUFSIZ  512#endif /* defined (_M_MPPC) *//* * Default number of supported streams. _NFILE is confusing and obsolete, but * supported anyway for backwards compatibility. */#define _NFILE      _NSTREAM_#ifdef  _WIN32#define _NSTREAM_   512/* * Number of entries in _iob[] (declared below). Note that _NSTREAM_ must be * greater than or equal to _IOB_ENTRIES. */#define _IOB_ENTRIES 20#else   /* ndef _WIN32 */#ifdef  _DLL#define _NSTREAM_   128#else#ifdef  _MT#define _NSTREAM_   40#else#define _NSTREAM_   20#endif#endif  /* _DLL */#endif  /* ndef _MAC */#define EOF     (-1)#ifndef _FILE_DEFINEDstruct _iobuf {        char *_ptr;        int   _cnt;        char *_base;        int   _flag;        int   _file;        int   _charbuf;        int   _bufsiz;        char *_tmpfname;        };typedef struct _iobuf FILE;#define _FILE_DEFINED#endif#ifndef _MAC/* Directory where temporary files may be created. */#ifdef  _POSIX_#define _P_tmpdir   \"/\"#define _wP_tmpdir  L\"/\"#else#define _P_tmpdir   \"\\\\\"#define _wP_tmpdir  L\"\\\\\"#endif/* L_tmpnam = size of P_tmpdir *            + 1 (in case P_tmpdir does not end in \"/\") *            + 12 (for the filename string) *            + 1 (for the null terminator) */#define L_tmpnam sizeof(_P_tmpdir)+12#else   /* def _MAC */#define L_tmpnam 255#endif  /* _MAC */#ifdef  _POSIX_#define L_ctermid   9#define L_cuserid   32#endif/* Seek method constants */#define SEEK_CUR    1#define SEEK_END    2#define SEEK_SET    0#define FILENAME_MAX    260#define FOPEN_MAX       20#define _SYS_OPEN       20#define TMP_MAX         32767/* Define NULL pointer value */#ifndef NULL#ifdef  __cplusplus#define NULL    0#else#define NULL    ((void *)0)#endif#endif/* Declare _iob[] array */#ifndef _STDIO_DEFINED_CRTIMP extern FILE _iob[];#endif  /* _STDIO_DEFINED *//* Define file position type */#ifndef _FPOS_T_DEFINED#undef _FPOSOFF#if defined (_POSIX_)typedef long fpos_t;#else /* _POSIX_ */#if     !__STDC__ && _INTEGRAL_MAX_BITS >= 64typedef __int64 fpos_t;#define _FPOSOFF(fp) ((long)(fp))#elsetypedef struct fpos_t {        unsigned int lopart;        int          hipart;        } fpos_t;#define _FPOSOFF(fp) ((long)(fp).lopart)#endif#endif  /* _POSIX_ */#define _FPOS_T_DEFINED#endif#define stdin  (&_iob[0])#define stdout (&_iob[1])#define stderr (&_iob[2])#define _IOREAD         0x0001#define _IOWRT          0x0002#define _IOFBF          0x0000#define _IOLBF          0x0040#define _IONBF          0x0004#define _IOMYBUF        0x0008#define _IOEOF          0x0010#define _IOERR          0x0020#define _IOSTRG         0x0040#define _IORW           0x0080#ifdef _POSIX_#define _IOAPPEND       0x0200#endif/* Function prototypes */#ifndef _STDIO_DEFINED_CRTIMP int __cdecl _filbuf(FILE *);_CRTIMP int __cdecl _flsbuf(int, FILE *);#ifdef  _POSIX__CRTIMP FILE * __cdecl _fsopen(const char *, const char *);#else_CRTIMP FILE * __cdecl _fsopen(const char *, const char *, int);#endif_CRTIMP void __cdecl clearerr(FILE *);_CRTIMP int __cdecl fclose(FILE *);_CRTIMP int __cdecl _fcloseall(void);#ifdef  _POSIX__CRTIMP FILE * __cdecl fdopen(int, const char *);#else_CRTIMP FILE * __cdecl _fdopen(int, const char *);#endif_CRTIMP int __cdecl feof(FILE *);_CRTIMP int __cdecl ferror(FILE *);_CRTIMP int __cdecl fflush(FILE *);_CRTIMP int __cdecl fgetc(FILE *);_CRTIMP int __cdecl _fgetchar(void);_CRTIMP int __cdecl fgetpos(FILE *, fpos_t *);_CRTIMP char * __cdecl fgets(char *, int, FILE *);#ifdef  _POSIX__CRTIMP int __cdecl fileno(FILE *);#else_CRTIMP int __cdecl _fileno(FILE *);#endif_CRTIMP int __cdecl _flushall(void);_CRTIMP FILE * __cdecl fopen(const char *, const char *);_CRTIMP int __cdecl fprintf(FILE *, const char *, ...);_CRTIMP int __cdecl fputc(int, FILE *);_CRTIMP int __cdecl _fputchar(int);_CRTIMP int __cdecl fputs(const char *, FILE *);_CRTIMP size_t __cdecl fread(void *, size_t, size_t, FILE *);_CRTIMP FILE * __cdecl freopen(const char *, const char *, FILE *);_CRTIMP int __cdecl fscanf(FILE *, const char *, ...);_CRTIMP int __cdecl fsetpos(FILE *, const fpos_t *);_CRTIMP int __cdecl fseek(FILE *, long, int);_CRTIMP long __cdecl ftell(FILE *);_CRTIMP size_t __cdecl fwrite(const void *, size_t, size_t, FILE *);_CRTIMP int __cdecl getc(FILE *);_CRTIMP int __cdecl getchar(void);_CRTIMP int __cdecl _getmaxstdio(void);_CRTIMP char * __cdecl gets(char *);_CRTIMP int __cdecl _getw(FILE *);_CRTIMP void __cdecl perror(const char *);_CRTIMP int __cdecl _pclose(FILE *);_CRTIMP FILE * __cdecl _popen(const char *, const char *);_CRTIMP int __cdecl printf(const char *, ...);_CRTIMP int __cdecl putc(int, FILE *);_CRTIMP int __cdecl putchar(int);_CRTIMP int __cdecl puts(const char *);_CRTIMP int __cdecl _putw(int, FILE *);_CRTIMP int __cdecl remove(const char *);_CRTIMP int __cdecl rename(const char *, const char *);_CRTIMP void __cdecl rewind(FILE *);_CRTIMP int __cdecl _rmtmp(void);_CRTIMP int __cdecl scanf(const char *, ...);_CRTIMP void __cdecl setbuf(FILE *, char *);_CRTIMP int __cdecl _setmaxstdio(int);_CRTIMP int __cdecl setvbuf(FILE *, char *, int, size_t);_CRTIMP int __cdecl _snprintf(char *, size_t, const char *, ...);_CRTIMP int __cdecl sprintf(char *, const char *, ...);_CRTIMP int __cdecl sscanf(const char *, const char *, ...);_CRTIMP char * __cdecl _tempnam(const char *, const char *);_CRTIMP FILE * __cdecl tmpfile(void);_CRTIMP char * __cdecl tmpnam(char *);_CRTIMP int __cdecl ungetc(int, FILE *);_CRTIMP int __cdecl _unlink(const char *);_CRTIMP int __cdecl vfprintf(FILE *, const char *, va_list);_CRTIMP int __cdecl vprintf(const char *, va_list);_CRTIMP int __cdecl _vsnprintf(char *, size_t, const char *, va_list);_CRTIMP int __cdecl vsprintf(char *, const char *, va_list);#ifndef _MAC#ifndef _WSTDIO_DEFINED/* wide function prototypes, also declared in wchar.h  */#ifndef WEOF#define WEOF (wint_t)(0xFFFF)#endif#ifdef  _POSIX__CRTIMP FILE * __cdecl _wfsopen(const wchar_t *, const wchar_t *);#else_CRTIMP FILE * __cdecl _wfsopen(const wchar_t *, const wchar_t *, int);#endif_CRTIMP wint_t __cdecl fgetwc(FILE *);_CRTIMP wint_t __cdecl _fgetwchar(void);_CRTIMP wint_t __cdecl fputwc(wint_t, FILE *);_CRTIMP wint_t __cdecl _fputwchar(wint_t);_CRTIMP wint_t __cdecl getwc(FILE *);_CRTIMP wint_t __cdecl getwchar(void);_CRTIMP wint_t __cdecl putwc(wint_t, FILE *);_CRTIMP wint_t __cdecl putwchar(wint_t);_CRTIMP wint_t __cdecl ungetwc(wint_t, FILE *);_CRTIMP wchar_t * __cdecl fgetws(wchar_t *, int, FILE *);_CRTIMP int __cdecl fputws(const wchar_t *, FILE *);_CRTIMP wchar_t * __cdecl _getws(wchar_t *);_CRTIMP int __cdecl _putws(const wchar_t *);_CRTIMP int __cdecl fwprintf(FILE *, const wchar_t *, ...);_CRTIMP int __cdecl wprintf(const wchar_t *, ...);_CRTIMP int __cdecl _snwprintf(wchar_t *, size_t, const wchar_t *, ...);_CRTIMP int __cdecl swprintf(wchar_t *, const wchar_t *, ...);_CRTIMP int __cdecl vfwprintf(FILE *, const wchar_t *, va_list);_CRTIMP int __cdecl vwprintf(const wchar_t *, va_list);_CRTIMP int __cdecl _vsnwprintf(wchar_t *, size_t, const wchar_t *, va_list);_CRTIMP int __cdecl vswprintf(wchar_t *, const wchar_t *, va_list);#define getc(_stream)     (--(_stream)->_cnt >= 0 \\                ? 0xff & *(_stream)->_ptr++ : _filbuf(_stream))#define putc(_c,_stream)  (--(_stream)->_cnt >= 0 \\                ? 0xff & (*(_stream)->_ptr++ = (char)(_c)) :  _flsbuf((_c),(_stream)))#define getchar()         getc(stdin)#define putchar(_c)       putc((_c),stdout)#ifdef  _MT#undef  getc#undef  putc#undef  getchar#undef  putchar#endif#if     !__STDC__ && !defined(_POSIX_)/* Non-ANSI names for compatibility */#define P_tmpdir  _P_tmpdir#define SYS_OPEN  _SYS_OPEN_CRTIMP int __cdecl fcloseall(void);_CRTIMP FILE * __cdecl fdopen(int, const char *);_CRTIMP int __cdecl fgetchar(void);_CRTIMP int __cdecl fileno(FILE *);_CRTIMP int __cdecl flushall(void);_CRTIMP int __cdecl fputchar(int);_CRTIMP int __cdecl getw(FILE *);_CRTIMP int __cdecl putw(int, FILE *);_CRTIMP int __cdecl rmtmp(void);_CRTIMP char * __cdecl tempnam(const char *, const char *);_CRTIMP int __cdecl unlink(const char *);#endif  /* __STDC__ */#ifdef  __cplusplus}#endif#ifdef  _MSC_VER#pragma pack(pop)#endif  /* _MSC_VER */#endif  /* _INC_STDIO */_CRTIMP int __cdecl fwscanf(FILE *, const wchar_t *, ...)_CRTIMP int __cdecl swscanf(const wchar_t *, const wchar_t *, ...)_CRTIMP int __cdecl wscanf(const wchar_t *, ...)#define getwchar()              fgetwc(stdin#define putwchar(_c)            fputwc((_c),stdout#define getwc(_stm)             fgetwc(_stm#define putwc(_c,_stm)          fputwc(_c,_stm_CRTIMP FILE * __cdecl _wfdopen(int, const wchar_t *)_CRTIMP FILE * __cdecl _wfopen(const wchar_t *, const wchar_t *)_CRTIMP FILE * __cdecl _wfreopen(const wchar_t *, const wchar_t *, FILE *)_CRTIMP void __cdecl _wperror(const wchar_t *)_CRTIMP FILE * __cdecl _wpopen(const wchar_t *, const wchar_t *)_CRTIMP int __cdecl _wremove(const wchar_t *)_CRTIMP wchar_t * __cdecl _wtempnam(const wchar_t *, const wchar_t *)_CRTIMP wchar_t * __cdecl _wtmpnam(wchar_t *)#define _WSTDIO_DEFINE#endif  /* _WSTDIO_DEFINED *#endif /* ndef _MAC *#define _STDIO_DEFINE#endif  /* _STDIO_DEFINED */* Macro definitions *#define feof(_stream)     ((_stream)->_flag & _IOEOF#define ferror(_stream)   ((_stream)->_flag & _IOERR#define _fileno(_stream)  ((_stream)->_file--[37m     ¡ã[0;5;33m«[5mï[5m²[5mH[5mµ[5mê[5mµ[5mL[0;37m¡ã[0m[37m       ¡ã[0;5;33m¦[5mÛ[5m¦[5mb[5m¤[5m@[5m¥[5mÍ[0;37m¡ã[0m[37m         ¡ã[0;5;33m¤[5mM[5m¼[5mC[5m¬[5mõ[5m¹[5mĞ[0;37m¡ã[0m[37m           ¡ã[0;5;33m·[5mö[5m¯[5mº[5m¥[5m@[5m¤[5mH[0;37m¡ã[0m[37m                                         ¡ã [35;46m¹CÀ¸¤H¶¡[34;40m-[36m¹CÀs«L[37m¡ã[0m","author":"¹CÀs«L(kkeenn)","title":"¡´stdio.h","time":1018024249,]),(["msg":"        set(\"chat_chance_combat\",40);        set(\"chat_msg_combat\",({  (:perform1:),      //§ğÀ»  (:perform2:),      //Àø¶Ë   }));int do_perform1(object me,killer){           object me = this_object();       object killer = this_player();        if( killer->query(\"level\") > 20 )   //¦pªG¼Ä¤Hªºµ¥¯Å°ª©ó20        {          tell_room(HIW+me->query(\"name\")\"¹ïµÛ\"+killer->query(\"name\")+\"«æ§ğ¤@¤Q¤G¼C¡H¡I\");          targe = int(me->query(\"str\") + random(50));          killer->add(-targe);     tell_room(HIR+killer->query(\"name\")\"¨ü¨ì\"+targe+\"ÂIªº¶Ë®`¡I\");                    return 1;              }        return 0; }int do_perform2(object me){           object me = this_object();      if( me->query(\"hp\") < int(me->query(\"max_hp\")/5) ) //¦pªG§Úªº¦å§C©ó1/5        {          me->add(\"hp\",200);         //¼W¥[200ºwHp          tell_room(HIW\"$N®³¥X¶ËÃÄ¼Å¨ì¨ü¶Ë³¡¦ì....[HP¤W¤É!!]\");          return 1;              }        return 0; }--[37m     ¡ã[0;5;33m«[5mï[5m²[5mH[5mµ[5mê[5mµ[5mL[0;37m¡ã[0m[37m       ¡ã[0;5;33m¦[5mÛ[5m¦[5mb[5m¤[5m@[5m¥[5mÍ[0;37m¡ã[0m[37m         ¡ã[0;5;33m¤[5mM[5m¼[5mC[5m¬[5mõ[5m¹[5mĞ[0;37m¡ã[0m[37m           ¡ã[0;5;33m·[5mö[5m¯[5mº[5m¥[5m@[5m¤[5mH[0;37m¡ã[0m[37m                                         ¡ã [35;46m¹CÀ¸¤H¶¡[34;40m-[36m¹CÀs«L[37m¡ã[0m","author":"¹CÀs«L(kkeenn)","title":"¡´AT","time":1018184316,]),(["msg":"//­×§ï by Moonhide.#include <ansi.h>string query_rank(object ob){     int combat_exp,temp_exp,exp;        combat_exp=ob->query(\"combat_exp\");        temp_exp=ob->query(\"temp_exp\");        exp=ob->query(\"exp\");        exp=exp+(combat_exp-temp_exp);        ob->set(\"temp_exp\",combat_exp);        ob->set(\"exp\",exp);        if( combat_exp > temp_exp )                   if( ob->is_ghost() ) return HIB \"¡i °­  »î ¡j\" NOR;        if( ob->query(\"id\") == \"kkeenn\" ) return HIC \"¡i Às  ¯« ¡j\" NOR;         if( ob->query(\"id\") == \"moonhide\" ) return HIC \" ¡i ¤ë  ¯« ¡j\" NOR;         switch(ob->query(\"gender\")) {        case \"¤k©Ê\":                switch(wizhood(ob)) {                        case \"(admin)\":                 return HIM \"¡i ¤k  ¯« ¡j\" NOR;                        case \"(arch)\":                  return HIM \"¡i ¤jÅ]¤k ¡j\" NOR;                        case \"(wizard)\":                return HIM \"¡i Å]  ¤k ¡j\" NOR;                        case \"(apprentice)\":            return HIM \"¡i ¤pÅ]¤k ¡j\" NOR;                        case \"(immortal)\":              return HIM \"¡i ¥P  ¤k ¡j\" NOR;                        default:        if( ((int)ob->query(\"PKS\") > 100) && ((int)ob->query(\"PKS\") > (int)ob->query(\"MKS\")) )                        return \"¡i ±ş¤HÅ] ¡j\";        if( (int)ob->query(\"thief\") > 10 )                        return \"¡i ºD  ÅÑ ¡j\";                                switch(ob->query(\"class\")) {                                        case \"bonze\":           return \"¡i ¥§  ©h ¡j\";                                        case \"taoist\":          return \"¡i ¤k  «a ¡j\";                                        case \"bandit\":          return \"¡i ¤k­¸¸é ¡j\";                                        case \"dancer\":          return \"¡i »R  §² ¡j\";                                        case \"scholar\":         return \"¡i ¤~  ¤k ¡j\";                                        case \"officer\":         return \"¡i ¤k  ©x ¡j\";//                                      case \"fighter\":         return \"¡i ¤kªZªÌ ¡j\";                                        case \"swordsman\":       return \"¡i ¤k¼C¤h ¡j\";                                        case \"alchemist\":       return \"¡i ¤è  ¤h ¡j\";                                        case \"shaman\":          return \"¡i §Å  Âå ¡j\";                                        case \"beggar\":          return \"¡i ¥s¤Æ¤l ¡j\";                                        case \"fighter\":         return \"¡i¤k®æ°«®a¡j\";                                        case \"wizer\":           return \"¡i¤kÅ]¾É¤h¡j\";                                        case \"lifter\":          return \"¡i ¤kµs¸é ¡j\";                                        case \"warrior\":         return \"¡i ¤k¾Ô¤h ¡j\";                                        default:                return \"¡i «_ÀIªÌ ¡j\";                        }                }        default:                switch(wizhood(ob)) {                        case \"(admin)\":                 return HIG \"¡i ¤Ñ  ¯« ¡j\" NOR;                        case \"(arch)\":                  return HIG \"¡i ¤j§Å®v ¡j\" NOR;                        case \"(wizard)\":                return HIG \"¡i §Å  ®v ¡j\" NOR;                        case \"(apprentice)\":            return HIG \"¡i§Å®v¾Ç®{¡j\" NOR;                        case \"(immortal)\":              return HIG \"¡i ¥P  ¤H ¡j\" NOR;                        default:        if( ((int)ob->query(\"PKS\") > 100) && ((int)ob->query(\"PKS\") > (int)ob->query(\"MKS\")) )                        return \"¡i ±ş¤HÅ] ¡j\";        if( (int)ob->query(\"thief\") > 10 )                         return \"¡i ºD  ÅÑ ¡j\";                                switch(ob->query(\"class\")) {                                        case \"bonze\":           return \"¡i ¹¬  ¤H ¡j\";                                        case \"taoist\":          return \"¡i ¾É  ¤h ¡j\";                                        case \"bandit\":          return \"¡i µs  ¸é ¡j\";                                        case \"scholar\":         return \"¡i ®Ñ  ¥Í ¡j\";                                        case \"officer\":         return \"¡i ©x  ®t ¡j\";//                                      case \"fighter\":         return \"¡i ªZ  ªÌ ¡j\";                                        case \"swordsman\":       return \"¡i ¼C  ¤h ¡j\";                                        case \"alchemist\":       return \"¡i ¤è  ¤h ¡j\";                                        case \"shaman\":          return \"¡i §Å  Âå ¡j\";                                        case \"beggar\":          return \"¡i ¥s¤Æ¤l ¡j\";                                        case \"fighter\":         return \"¡i ®æ°«®a ¡j\";                                        case \"wizer\":           return \"¡i Å]¾É¤h ¡j\";                                        case \"lifter\":          return \"¡i  µs¸é  ¡j\";                                        case \"warrior\":         return \"¡i  ¾Ô¤h  ¡j\";                                        default:                return \"¡i «_ÀIªÌ ¡j\";                        }                }        }}string query_respect(object ob){        int age;        string str;        if( stringp(str = ob->query(\"rank_info/respect\")) )                return str;        age = ob->query(\"age\");        switch(ob->query(\"gender\")) {                case \"¤k©Ê\":                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 18 ) return \"¤p®v¤Ó\";                                else return \"®v¤Ó\";                                break;                        case \"taoist\":                                if( age < 18 ) return \"¤p¥P©h\";                                else return \"¥P©h\";                                break;                        default:                                if( age < 18 ) return \"¤p©h®Q\";                                else if( age < 50 ) return \"©h®Q\";                                else return \"±C±C\";                                break;                        }                case \"¨k©Ê\":                default:                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 18 ) return \"¤p®v¤÷\";                                else return \"¤j®v\";                                break;                        case \"taoist\":                                if( age < 18 ) return \"¹D¥S\";                                else return \"¹Dªø\";                                break;                        case \"fighter\":                        case \"swordsman\":                                if( age < 18 ) return \"¤p¦Ñ§Ì\";                                else if( age < 50 ) return \"§§¤h\";                                else return \"¦Ñ«e½ú\";                                break;                        default:                                if( age < 20 ) return \"¤p¥S§Ì\";                                else if( age < 50 ) return \"§§¤h\";                                else return \"¦Ñ·İ¤l\";                                break;                        }        }}string query_rude(object ob){        int age;        string str;        if( stringp(str = ob->query(\"rank_info/rude\")) )                return str;        age = ob->query(\"age\");        switch(ob->query(\"gender\")) {                case \"¤k©Ê\":                        switch(ob->query(\"class\")) {                        case \"bonze\":                                return \"¸é¥§\";                                break;                        case \"taoist\":                                return \"§¯¤k\";                                break;                        case \"wizer\":                                return \"§¯¤k\";                                break;                        default:                                if( age < 30 ) return \"¤p½â¤H\";                                else return \"¦º¦Ñ¤Ó±C\";                                break;                        }                case \"¨k©Ê\":                default:                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 50 ) return \"¦º¨rÆj\";                                else return \"¦Ñ¨rÆj\";                                break;                        case \"taoist\":                                return \"¦º¤û»ó¤l\";                                break;                        case \"wizer\":                                return \"Å]¤H\";                                break;                        default:                                if( age < 20 ) return \"¤p¤ı¤K³J\";                                if( age < 50 ) return \"¯ä¸é\";                                else return \"¦Ñ¤Ç¤Ò\";                                break;                        }        }}string query_self(object ob){        int age;        string str;        if( stringp(str = ob->query(\"rank_info/self\")) )                return str;        age = ob->query(\"age\");        switch(ob->query(\"gender\")) {                case \"¤k©Ê\":                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 50 ) return \"³h¥§\";                                else return \"¦Ñ¥§\";                                break;                        default:                                if( age < 30 ) return \"¤p¤k¤l\";                                else return \"©c¨­\";                                break;                        }                case \"¨k©Ê\":                default:                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 50 ) return \"³h¹¬\";                                else return \"¦Ñ¯Ç\";                                break;                        case \"taoist\":                                return \"³h¹D\";                                break;                        default:                                if( age < 50 ) return \"¦b¤U\";                                else return \"¦ÑÀY¤l\";                                break;                        }        }}string query_self_rude(object ob){        int age;        string str;        if( stringp(str = ob->query(\"rank_info/self_rude\")) )                return str;        age = ob->query(\"age\");        switch(ob->query(\"gender\")) {                case \"¤k©Ê\":                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 50 ) return \"³h¥§\";                                else return \"¦Ñ¥§\";                                break;                        default:                                if( age < 30 ) return \"¥»©h®Q\";                                else return \"¦Ñ®Q\";                                break;                        }                case \"¨k©Ê\":                default:                        switch(ob->query(\"class\")) {                        case \"bonze\":                                if( age < 50 ) return \"¤j©M©|§Ú\";                                else return \"¦Ñ©M©|§Ú\";                                break;                        case \"taoist\":                                return \"¥»¤s¤H\";                                break;                        default:                                if( age < 50 ) return \"¤j·İ§Ú\";                                else return \"¦Ñ¤l\";                                break;                        }        }}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´search somthing","time":1018189125,]),(["msg":"--§Å®v¦U¥Ø¿ı¤À°t--(immortal)   : µL¼g§@¯à¤O¡A¤]µL¼g§@°Ï°ì¡C(apprentice) : ¦³¼g§@¯à¤O¡A¤u§@°Ï°ì¬°/u/©³¤U¤§­Ó¤H¥Ø¿ı¡C(wizard)     : ¦³¼g§@¯à¤O¡A¤u§@°Ï°ì°£/u/©³¤U¤§¥~¡A¥~¥[/d/¤U¤§°Ï°ì               ¥Ø¿ı¡C(arch)       : ¦³¼g§@¯à¤O¡A¤u§@°Ï°ì°£/adm/¥H¥~¡A¬Ò¥i¡C(admin)      : ²@µL­­¨î¡C--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´¯à¤O¤À¯Å","time":1018363296,]),(["msg":"// dbase.c //#include <dbase.h> inherit F_TREEMAP; mapping dbase; static mapping tmp_dbase; //      The default_ob provides the default values of the dbase. It is set to //      be master copy of an object. static mixed default_ob; mixed query_default_object() { return default_ob; } void set_default_object(mixed ob) { //      if( geteuid(previous_object()) != ROOT_UID ) //              error(\"dbase: Only this_object() or object with root euid can set default_ob.\\n\");         if( !geteuid() ) seteuid(getuid());         default_ob = ob;         ob->add(\"no_clean_up\", 1); } mixed set(string prop, mixed data) {        if( !mapp(dbase) ) dbase = ([]);         if( strsrch(prop, '/')!=-1 )                 return _set( dbase, explode(prop, \"/\"), data );        return dbase[prop] = data;}varargs mixed query(string prop, int raw) {         mixed data;        if( !mapp(dbase) ) return 0;        if( undefinedp(dbase[prop]) && (strsrch(prop, '/')!=-1) )                 data = _query(dbase, explode(prop, \"/\"));         else                 data = dbase[prop];         if( undefinedp(data) && default_ob )                 data = default_ob->query(prop, 1);         if( raw ) return data;         return evaluate( data, this_object() );} int delete(string prop) {         if( !mapp(dbase) ) return 0;         if( strsrch(prop, '/')!=-1 )                 return _delete(dbase, explode(prop, \"/\"));         else {                 map_delete(dbase, prop);                 return 1;         } }mixed add(string prop, mixed data) {        mixed old;        if( !mapp(dbase) || !(old = query(prop, 1)) )                 return set(prop, data);        if( functionp(old) )                 error(\"dbase: add() - called on a function type property.\\n\");         return set(prop, old + data); }mapping query_entire_dbase() { //      if( (previous_object() != this_object()) //      &&      (geteuid(previous_object()) != ROOT_UID) ) //              error(\"dbase: query_entire_dbase() - must has root euid or be this_object().\\n\");        return dbase; } mixed set_temp(string prop, mixed data) {         if( !mapp(tmp_dbase) ) tmp_dbase = ([]);         if( strsrch(prop, '/')!=-1 )                 return _set( tmp_dbase, explode(prop, \"/\"), data );         return tmp_dbase[prop] = data; } varargs mixed query_temp(string prop, int raw) {        mixed data;         if( !mapp(tmp_dbase) ) return 0;        if( strsrch(prop, '/')!=-1 )                 data = _query(tmp_dbase, explode(prop, \"/\"));         else                 data = tmp_dbase[prop];         if( functionp(data) && !raw )                 return (*data)( this_object() );         else                  return data; }int delete_temp(string prop) {        if( !mapp(tmp_dbase) ) return 0;         if( strsrch(prop, '/')!=-1 )                 return _delete(tmp_dbase, explode(prop, \"/\"));         else {                 map_delete(tmp_dbase, prop);                 return 1;        } }mixed add_temp(string prop, mixed data) {        mixed old;        if( !mapp(tmp_dbase) || !(old = query_temp(prop, 1)) )                 return set_temp(prop, data);        if( functionp(old) )                  error(\"dbase: add_temp() - called on a function type property.\\n\");         return set_temp(prop, old + data); }mapping query_entire_temp_dbase() { //      if( (previous_object() != this_object()) //      &&      (geteuid(previous_object()) != ROOT_UID) ) //              error(\"dbase: query_entire_temp_dbase() - must has root euid or be this_object().\\n\");         return tmp_dbase; } --[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´dbase.c","time":1018366482,]),(["msg":"feature/dbase.c line 29: Illegal to call private function '_set'feature/dbase.c line 41: Illegal to call private function '_query'feature/dbase.c line 58: Illegal to call private function '_delete'--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´dbase bug","time":1018366516,]),(["msg":"¡¼ ¥ú©ú»P¶Â·t°ê®a¤@Äıªí   °ê®a¦WºÙ         ­±¿n    °}Àç    ºØ±Ú    °ê¤ı                 ­^¤å                    01.¨ÈÃ¹ÂÅ¤ı°ê       ¥¨¤j    ¥ú©ú    ¤HÃş    ®L¦ÌÄõ  Ã¹¼w         Road   02.­{¯Ç«Ò°ê          ¤j     ¤¤¥ß    ¤HÃş    ­{¼}º¸  ­@¯S         Ghana03.Ãe¨©¶©¦Ûªv°Ï      ¤p     ¤¤¥ß    ¤HÃş    Ãe¨©¶©¤Q¤C¥@         badon04.¥dº¿­}¦@©M°ê      ¤j     ¥ú©ú    ¤HÃş    ¥d¥dº¸  ¶ø»í¯S       karmadi05.®õ®æº¸¤ı°ê        ¤p     ¶Â·t    ¤HÃş    ¥jÄõ¯S  ®õ®æº¸       taikur06.Ä¬µáëV¤ı°ê        ¤p     ¤¤¥ß    ºëÆF    Ä¬µáëV               dream07.ºëÆF¤ı°ê          ¤p     ¥ú©ú    ºëÆF    «¶Ä¬¶®  ºû¯Ç´µ       venus08.¤Ó¶§¨¦            ¤p     ¤¤¥ß    Às±Ú    ¶Àª÷Às¤ı             sun09.¤ÛÀs¬É            ¤p     ¤¤¥ß    Às±Ú    ¤ÛÀs¤ı               whan10.¸tÀs«Ò°ê          ¤¤     ¥ú©ú    Às±Ú    ¸tÀs¬Ó               light  11.Å]Às«Ò°ê          ¤¤     ¨¸´c    Às±Ú    îîÀs¬Ó               dark12.ªü©¬«´¤ı°ê        ¤j     ¨¸´c    Ã~±Ú    ¨U±F¤Ò  ¨È¾ú¤s¤j     apaki13.®w¬¥§J¤ı°ê        ¤p     ¤¤¥ß    Ã~±Ú    ¤Ú¹Fº¸  ®w¬¥§J       kuro14.ªüº¿´µ¤ı°ê       ¥¨¤j    ¶Â·t    Å]±Ú    ¨Èº¸¿Õ  ³£¥d  ªüº¿´µ amas          15.²ö¥§¥j¤ı°ê        ¤j     ¶Â·t    Å]±Ú    §J¹p»X  ­{¥d  ²ö¥§¥j morcu16.¥j®J¤Î¤ı°ê       ¥¨¤j    ¥ú©ú    ¤HÃş    ¶ğ¦èµ·               Aigi--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´list","time":1019571312,]),(["msg":"#include <ansi.h>inherit ROOM;string query_rank(object ob){     int moonhide;        if( ob->query(\"id\") == \"moonhide\" )         ob->set(\"RANK_D\",HIG\"³Üºñ¨§´ö\"NOR);}          else{         return RANK_D->query_rank(ob)}string query_long(); void create(){         set(\"short\", HIC\"Moonhide\"HIG\"'s \"HIB\"WorkRoom\"NOR);       set(\"long\",(:query_long :)       );        set(\"valid_startroom\", 1);         set(\"no_summon\",1);       set(\"no_goto\",1);       set(\"no_smash\",1);       set(\"no_home\",1);    setup();        set(\"exits\", ([   \"south\" : \"/u/m/moonhide/workroom2\", ]));        set(\"no_clean_up\", 0);        setup();       call_other(\"/obj/board/moonhide_b\", \"???\");}int sort_user(object ob1, object ob2){                return (int)SECURITY_D->get_wiz_level(ob1)                        - (int)SECURITY_D->get_wiz_level(ob2);}int member_wiz(object obj){        if(wizardp(obj)) return 1;        return 0;}string query_long(){object *list;        string str;        int  j;          list = users();         list = filter_array(list,\"member_wiz\",this_object());         list = sort_array(list, \"sort_user\", this_object());         j = sizeof(list);             str = HIR\"\\n===============½u¤W§Å®v¦³================\\n\"NOR;                          while( j-- ) {                         str = sprintf(\"%s%12s%s\",                                str,                                RANK_D->query_rank(list[j]),                                list[j]->short(1)                        );                         str += \"\\n\";        }                str +=HIG\"=========================================\\n\"NOR;        return str;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´.","time":1019664773,]),(["msg":"string sleep(string a);void create(){ string hmm=\"baga\", end; end = sleep(hmm); printf(\"%s\", end);}string sleep(string a){ a = a + \"moonhide\"; return a;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´.","time":1019735957,]),(["msg":"string sleep(string a);       //¦³¤@­Ó¦r¦êÅÜ¼Æ¥ssleep (=a)void create()                 //¶}©l¼g¤Jcode{                             //µ{¦¡¼g¤JÂI string hmm=\"baga\", end;      //¦r¦êÅÜ¼Æ hmm = ¦r¦ê baga ©M end end = sleep(hmm);            //ÅÜ¼Æ end = sleep(baga); printf(\"%s\", end);           //¦L¥X §ì¨ìªºstring«¬ºAªºÅÜ¼Æ¦r¦ê,¦A©¹«á§ì,§ì¨ìend³o­ÓÅÜ¼Æ,¤]¦L¥X¨Ó}                             //µ{¦¡µ²§ôÂIstring sleep(string a)        //¦³¤@­Ó¦r¦êÅÜ¼Æ¥ssleep (sleep = a ){                             //µ{¦¡¼g¤JÂI a = a + \"moonhide\";          // sleep = sleep + ¦r¦ê moonhide return a;                    //´N·|¶Ç¦^a³o­Ó­È,a = sleep + \"moonhide\"}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´nod","time":1019736462,]),(["msg":"string sleep(string a);    //«Å§i¨ç¦¡sleep,©w¸qa³o­ÓÅÜ¼Ævoid create()                //µ{¦¡¼g¤JÂI{  string hmm=\"baga\", end;     //¦³¤@¦r¦êÅÜ¼Æ = ¦r¦ê baga,hmm¨Ó¸Ëbaga,end¥Î¨Ó¸Ë return¶Ç¦^ªº­È end = sleep(hmm);           // end¸Ì¸Ëªº¬Osleep³o­Ófunc,¥Ñ¤U­±¶Ç¦^ printf(\"%s\", end);          //§â¸Ë¦b¦r¦êÅÜ¼Æ end¸Ìªº¦^­È¦L¥X = bagamoonhide}string sleep(string a)       //¶]sleep³o­Ófunc,µ¥return¶Ç¦^­È,±o¨ìµ²ªG«á,sleep¦A©¹¤W¶Ç{ a = a + \"moonhide\";         // a =  baga + moonhide =>bagamoonhide return a;                   // ­È¬°bagamoonhide,¶Ç¦^stringÅÜ¼Æa ,sleep = a}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´.","time":1019744170,]),(["msg":"#include <ansi.h>inherit F_CLEAN_UP;--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´.","time":1019746031,]),(["msg":"// clean_up.c// by Annihilator@ES2int clean_up(){        object *inv;        int i;        if( !clonep() && this_object()->query(\"no_clean_up\") ) return 1;        if(interactive(this_object())) return 1;        // If we are contained in something, let environment do the clean        // up instead of making recursive call. This will prevent clean-up        // time lag.        if(environment()) return 1;        inv = all_inventory();        for(i=sizeof(inv)-1; i>=0; i--)                if(interactive(inv[i])) return 1;        destruct(this_object());        return 0;}--[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´clean_up.c","time":1019746206,]),(["msg":"#include <ansi.h>inherit F_CLEAN_UP;void init(){     add_action(\"rename\");}     int rename(object who)     {         object  ob;              ob = this_player(); --[36m                        ¢¡      ¢¡      ¢~      [0m[0;5;36m¢[5m¡[5m¢[5m¡[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m~[5mù[5mù[5m¢[5m¡[5m¢[5m¡[5mù[5mù[5m¢[5m¡[5mù[5mà[5mù[5mù[5m¢[5m¡[5m¢[5m¢[5mù[5mŞ[5m¢[5m¡[5m¢[5m~[5mù[5mù[5mù[5mø[5m¢[5m~[5mù[5mù[5m¢[5m¡[0m[36mùøùøùøùø  ùøùø  ùøùø  ùøùø  ùø  ùø  ùø  ùøùàùùùå[0m[0;5;36;41m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5m [5m [5m¢[5m¢[5m¢[5m¢[5mù[5mä[5mù[5mù[5m¢[5m¢[5mù[5mù[5m¢[5m£[5m¢[5m¢[5mù[5mù[5m¢[5m£[0m ","author":"¤ëÁô(moonhide)","title":"¡´.","time":1019747378,]),}),"no_clean_up":1,"master":({"moonhide",}),"long":"[0;5;34m½[5mĞ[5m¯[5md[5m¨[5m¥[0m¡C",])
