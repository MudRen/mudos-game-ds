#/obj/mailbox.c
dbase (["name":"·CÁôªº«H½c","no_drop":1,"id":"mailbox","no_put":1,"long":"		³o¬O¤@­Ó¥Î¨Ó±H«H¡B¦¬«Hªº«H½c¡M§A¥i¥H¥Î¥H¤U«ü¥O¨Ó³B²z§Aªº¶l¥ó¡R						mail <¬Y¤H>               ±H«Hµ¹§O¤H¡C		replymail <«H¥ó½s¸¹>      ¦^«Hµ¹µo«HªÌ¡C		forward <«H¥ó½s¸¹> <¬Y¤H> ±N¬Y«Ê«HÂà±Hµ¹§O¤H¡C		from                      ¬d¬Ý«H½c¤¤ªº«H¥ó¡C		read <«H¥ó½s¸¹>           ¾\\Åª¤@«Ê«H¥ó¡C		discard <«H¥ó½s¸¹>        ¥á±ó¤@«Ê«H¥ó¡C","no_insert":1,"unit":"­Ó","owner_id":"msgdig",])
mails ({(["title":"¤E¥È¤jªk","to":"msgdig","text":"// ¤E¥È¤jªk (nine-mystery)// Tmr 2006/11/22#include <ansi.h>#define SKILL_NAME \"nine-mystery\"        inherit SKILL;int exert(object me,object target, string arg){    int force,sk,heal;    force=me->query_skill(\"force\",2);    sk=me->query_skill(SKILL_NAME,2);    heal=(force+sk)/2;    //Àø¶Ë¥\\¯à    if(arg ==\"heal\" )    {        if( me->query_skill_mapped(\"force\")==SKILL_NAME) return notify_fail(\"§A¥¿¦b­×·Ò¤E¥È¤jªk¡C\\n\");        if(me->query(\"hp\") >= me->query(\"max_hp\") ) return notify_fail(\"§Aªº°·±dª¬ªp¤w¹FÄA®p¡C\\n\");         if(me->query(\"ap\") < heal/2 ) return notify_fail(\"§A¥Ø«eªº¨­Åéª¬ªp¡A¤£¯à¨Ï¥ÎÀø¶Ë¥\\\\¯à¡C\\n\");        if (me->is_fighting() ) return notify_fail(\"§A¥¿¦£µÛ¾Ô°«¡A¨S¦³ªÅÀø¶Ë\");        message_vision( \"$N¨Ï¥X¤E¥È¤jªk\"HIW\"¯u®ðÀø¶Ë\"NOR\"¡A¶i¤J¥ý¤Ñ©I§l¡A¹B®§Àø¶Ë¡C\\n\" ,me);         me->receive_damage(\"ap\", heal/2);                me->receive_heal(\"hp\", heal);        me->start_busy(1);        me->improve_skill(SKILL_NAME,1+random(force/4)+me->query_int()/5 );        me->improve_skill(\"force\",1+random(me->query(\"level\"))+me->query_int()/5 );        return 1;    }    return notify_fail(\"¤E¥È¤jªkªº¥\\\\¯à¦³¡Gheal ¡C\\n\");}int valid_learn(object me){    return 1;}int practice_skill(object me){    return 1;}[0m","from":"½¹½º§g(pilibyron)","time":1181730046,]),})
last_read_time 1181730046
