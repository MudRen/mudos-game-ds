// skills.c

#include <ansi.h>

inherit F_CLEAN_UP;

int main(object me, string arg)
{
	object ob;
	mapping skl, lrn, map;
	string *sname, *mapped,result;
	int i,k;

	seteuid(getuid());

	if(!arg)
		ob = me;
	else{
		ob = present(arg, environment(me));
//        if ( ob->query("SPSKILLS",1)  ) return ob->skills();		 
		if (!ob) ob = find_player(arg);
		if (!ob) ob = find_living(arg);
		if (!ob) return notify_fail("你要察看誰的技能﹖\n");
	}

	if( ob!=me && !wizardp(me) && !ob->is_apprentice_of(me)
	&& !me->is_apprentice_of(ob) )
		return notify_fail("只有巫師或有師徒關係的人能察看他人的技能。\n");

	skl = ob->query_skills();
	if(!sizeof(skl)) {
		write( (ob==me ? "你" : ob->name()) + "目前並沒有學會任何技能。\n");
		return 1;
	}
        result = sprintf("%s                                │ %12s%s  │%s%s%s",
        "\n\n   ◎ 夢  幻  七  域 ◎         ╭────────────────╮\n",
	ob==me ? "你" : ob->name() ,
	"目前所學過的技能 ",
	"\n┌───────────────┴────────────────┴┐\n",
	"│  技 能 名 稱                        等級    熟練度 / 升級熟練度  │\n",
	"╞═════════════════════════════════╡\n"
	);
          sname  = sort_array( keys(skl), (: strcmp :) );

	
	map = ob->query_skill_map();
	if( mapp(map) ) mapped = values(map);
	if( !mapped ) mapped = ({});

	lrn = ob->query_learned();
	if( !mapp(lrn) ) lrn = ([]);
	for(i=0; i<sizeof(skl); i++)
	{
		result += sprintf("│%s%s%-34s" NOR " %3d(%3d)  %4d / %-5d       │\n",
			(lrn[sname[i]] >= (skl[sname[i]]+1) * (skl[sname[i]]+1)*2 ) ? HIM : "",
			(member_array(sname[i], mapped)==-1? "  ": "★"),
			to_chinese(sname[i]) + " (" + sname[i] + ")",
			ob->query_skill(sname[i],2), ob->query_skill(sname[i],1),
			(int)lrn[sname[i]],
			(skl[sname[i]]+ 1) * (skl[sname[i]]+ 1) * 2,
			);

	}
	result += "└─────────────────────────────────┘\n";
	me->start_more(result);
	return 1;
}

int help(object me)
{
	write(@HELP
指令格式 : skills [<某人>]

這個指令可以讓你(妳)查詢所學過的技能。

你也可以指定一個和你有師徒關係的對象﹐用 skills 可以查知對方的技能狀況。

巫師可以查詢任何人或 NPC 的技能狀況。

HELP
    );
    return 1;
}
